language: cpp
#sudo: false

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   # via the "travis encrypt" command using the project repo's public key
   - secure: "YJUngdwFFjYT7wRGNZz+tGTcDFZef/vjyw90gku4WlwhUyL+lJCD6U2z1FVIURfTYI3U2XnyoNgnUaWmPzAaol+f3FBhJ4MWmPTF4n3WG0hSgFVeY2ULxxwLGlVOUMJQukw4BbtrSSiui4qzEI58qT/k7O7cIHxeF6HgCZB4kgCAfNR8bnkZXTI+Zsay5e3Bo7Wnz0y1eTJksauJ7gKwZwJhlxzo0S1AljAZi+iHR0iqd/zfqXoLsfZSjOl2W6zuLwUI+WHfoG2mu8771w/0LJFGGEqwcwwjPbhYjnNctqVvmlWLLreYDFu4PaI8w256DrZbJK079q5VBsHjCAT05daJthHNKt2kqCfcEGWsVfOlzCNF7NtcdhzuVJO4L8yNoUMgdhL04pyXnbM2WqVxX87ewloBinGTqCTC1d9z1nLFi1+6QypaOH+Q7UuiTtbqcYpd0pfpZD+l7kuumwqI65n6kqCUvCaVAytlu0tUtppKgL23L4ztA/wNYqnDAs46eDt7w16IA8RfQ2zqptHgl9BH6+pV2Ose/0n07RE9NAm2Et7j/H3jzMTtHt2W2nFtXqd6Q4X0lNeAzqLOV3p0JSlwy5sPv2Gm6AFozME1Np/MmCSTCq10OR4pDF3frDCMLCn1KkItaoIfk+cnU6roCsv5e1vIyppGCnW1KqaemAs="

matrix:
  include:
    # - env: BUILD_TYPE=Debug
    #   os: osx
    #   osx_image: xcode8
    #   compiler: clang
    # - env: BUILD_TYPE=Release
    #   os: osx
    #   osx_image: xcode8
    #   compiler: clang

    # clang-3.6
#    - env: CLANG_VERSION=3.6 BUILD_TYPE=Debug
#      os: linux
#      addons: &clang36
#        apt:
#          packages:
#            - cmake
#            - cmake-data
#            - clang-3.6
#            - g++-5
#          sources:
#            - george-edison55-precise-backports
#            - ubuntu-toolchain-r-test
#            - llvm-toolchain-precise-3.6
#
#    - env: CLANG_VERSION=3.6 BUILD_TYPE=Release
#      os: linux
#      addons: *clang36

    # clang-3.7
#    - env: CLANG_VERSION=3.7 BUILD_TYPE=Debug
#      os: linux
#      addons: &clang37
#        apt:
#          packages:
#            - cmake
#            - cmake-data
#            - clang-3.7
#            - g++-5
#          sources:
#            - george-edison55-precise-backports
#            - ubuntu-toolchain-r-test
#            - llvm-toolchain-precise-3.7
#    - env: CLANG_VERSION=3.7 BUILD_TYPE=Release
#      os: linux
#      addons: *clang37

    # clang-3.8
#    - env: CLANG_VERSION=3.8 BUILD_TYPE=Debug
#      os: linux
#      addons: &clang38
#        apt:
#          packages:
#            - cmake
#            - cmake-data
#            - clang-3.8
#            - g++-5
#          sources: &sources
#            - george-edison55-precise-backports
#            - ubuntu-toolchain-r-test
#            - llvm-toolchain-precise-3.8
#    - env: CLANG_VERSION=3.8 BUILD_TYPE=Release
#      os: linux
#      addons: *clang38

    # clang-3.9
#    - env: CLANG_VERSION=3.9 BUILD_TYPE=Debug
#      os: linux
#      addons: &clang39
#        apt:
#          packages:
            # - cmake
            # - cmake-data
#            - clang-3.9
#            - g++-5
#          sources: &sources
#            - ubuntu-toolchain-r-test
#            - llvm-toolchain-precise
#    - env: CLANG_VERSION=3.9 BUILD_TYPE=Release
#      os: linux
#      addons: *clang39

    # gcc-4.9
#    - env: GCC_VERSION=4.9 BUILD_TYPE=Debug
#      os: linux
#      addons: &gcc49
#        apt:
#          packages:
#            - cmake
#            - cmake-data
#            - g++-4.9
#          sources:
#            - george-edison55-precise-backports
#            - ubuntu-toolchain-r-test
#
#    - env: GCC_VERSION=4.9 BUILD_TYPE=Release
#      os: linux
#      addons: *gcc49

    # gcc-5
#    - env: GCC_VERSION=5 BUILD_TYPE=Debug
#      os: linux
#      addons: &gcc5
#        apt:
#          packages:
#            - cmake
#            - cmake-data
#            - g++-5
#          sources:
#            - george-edison55-precise-backports
#            - ubuntu-toolchain-r-test
#
#    - env: GCC_VERSION=5 BUILD_TYPE=Release
#      os: linux
#      addons: *gcc5

    # gcc-6
    - env: GCC_VERSION=6 BUILD_TYPE=Debug ARCH=32
      os: linux
      addons: &gcc6
        apt:
          packages:
            - cmake
            - cmake-data
            - g++-6
          sources:
            - george-edison55-precise-backports
            - ubuntu-toolchain-r-test

    - env: GCC_VERSION=6 BUILD_TYPE=Release ARCH=32 DO_DEPLOY=True
      os: linux
      addons: *gcc6
    - env: GCC_VERSION=6 BUILD_TYPE=Debug ARCH=64
      os: linux
      addons: *gcc6
    - env: GCC_VERSION=6 BUILD_TYPE=Release ARCH=64 DO_DEPLOY=True
      os: linux
      addons: *gcc6
  allow_failures:
    - os: osx

branches:
  only:
    - master
    - /^\d+\.\d+\.\d+$/

before_install:
  - |
    if [ -n "$GCC_VERSION" ]; then
      export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}" GCOV="gcov-${GCC_VERSION}";
    fi
  - |
    if [ -n "$CLANG_VERSION" ]; then
      export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}";
    fi


install:
  # install latest LCOV (1.9 was failing)
  - |
    if [[ $TRAVIS_OS_NAME != "osx" ]]; then
      cd ${TRAVIS_BUILD_DIR}
      wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
      tar xf lcov_1.11.orig.tar.gz
      sudo make -C lcov-1.11/ install
      gem install coveralls-lcov
      lcov --version
    fi

before_script:
  #- if [[ $TRAVIS_OS_NAME == "osx" ]]; then brew update > /dev/null && brew install mariadb && mysql.server start; fi
  - mkdir build
  - cd build
  - |
    echo "compiler: ${COMPILER}"
    if [[ "$GCOV" == "gcov-5" && "$BUILD_TYPE" == "Debug" ]]; then
      cmake -DCMAKE_CXX_COMPILER=${COMPILER} -DARCH=${ARCH} -DGCOV_BINARY=${GCOV} -DCMAKE_BUILD_TYPE=Debug -DCOVERAGE=true ..;
      lcov --directory include --directory src --directory test --zerocounters
    else
      cmake -DCMAKE_CXX_COMPILER=${COMPILER} -DARCH=${ARCH} -DCMAKE_BUILD_TYPE=Debug ..;
    fi

script:
  - |
      make
      make test ARGS=-V

after_success:
  - |
    if [[ $GCOV == "gcov-5" && "$BUILD_TYPE" == "Debug" ]]; then
      cd ${TRAVIS_BUILD_DIR}
      type $GCOV
      lcov --no-external --base-directory ${TRAVIS_BUILD_DIR} --directory build/src --directory build/test --capture --gcov-tool `which $GCOV` --output-file coverage.info
      lcov --remove coverage.info 'build/test/*' 'build/src/*' --gcov-tool `which $GCOV` --output-file coverage.info
      lcov --list coverage.info
      coveralls-lcov --repo-token=${COVERALLS_TOKEN} coverage.info
    fi

before_deploy:
  - cd ${TRAVIS_BUILD_DIR}
  - cmake --build build --target package
  - export RELEASE_PKG_FILE=$(ls Package/*.tar.gz)
  - echo "deploying $RELEASE_PKG_FILE to GitHub releases"

deploy:
  provider: releases
  api_key: ${GITHUB_TOKEN}
#  api_key:
#    secure: "xfjHf0E/pbe7Lw67xU8b1ldPUTB2cVFF00rF350+46iSpcYYLhVZ+GAGK8NHAwq4lgHlLM9zidgRmvgG3MimxEMa96nT4EBMSnqyRIHaaeEMJWjU7EdMj4FUXnRIw7JGsM3KEAJg0QCpykWz1g11afK4XZVqcwpb+OIYj1qkpP5NPaD/6qF0u2WCsjTqQp8s0ZjCusu2xN9EMJIHmooRjGkTm4bMWVi2QMmiyaPjEyq4vbgagNnNOExhmg0VZcZAc6O+yDqfGW6wBqVBe0XB2HDNVTQ18UrA23kQCF9owddl4iUUgz21ZcUUCm/5R62xs4qZ5bxEheVZQqEA91f7tlLWhrQC6FFUIibWYErgE/YegA6+G5H+ztROK01eZvS1qqRjgT9dTSFPZqyweVtFBlazz+bPwUrI4ejv9cPc0Le3JEGKMkW1tJhNzTw/AHkIp2ThDpgHScZgLdCef3zyCBMk+a1ukezCioJyoleGkrOQguwD3MR5GH34TUBULU4EOZDrqdCOT+I666u84Px+m/L03SOcR36HFQcjyGYqBLqSJYesl18JWhO0BQGsk5k28pOnqSnQDwkakSEzSAU214lqb1eA8riy4MMmJOMT+4qNGb9qWzlx0Q46bBjexgus4GFmnRaxhoKbGP+FDDPXR+bMOKFJL/BA+B5YiPhewVQ="
  file_glob: true
  file:
    - "${RELEASE_PKG_FILE}"
  skip_cleanup: true
  on:
#    repo: zussel/cmake-cpp-seed
    tags: true
    condition: "-n $DO_DEPLOY"
    all_branches: true

notifications:
  email:
    recipients:
      - sascha.kuehl@gmx.net
  on_success: change # [always|never|change] # default: change
  on_failure: always # [always|never|change] # default: always
