language: cpp
matrix:
  include:
  - env: GCC_VERSION=6 BUILD_TYPE=Debug ARCH=32
    os: linux
    addons: &1
      apt:
        packages:
        - cmake
        - cmake-data
        - rpm
        - linux-libc-dev:i386
        - g++-6-multilib
        - gcc-6-multilib
        sources:
        - george-edison55-precise-backports
        - ubuntu-toolchain-r-test
  - env: GCC_VERSION=6 BUILD_TYPE=Release ARCH=32
    os: linux
    addons: *1
  - env: GCC_VERSION=6 BUILD_TYPE=Debug ARCH=64
    os: linux
    addons: &2
      apt:
        packages:
        - cmake
        - cmake-data
        - rpm
        - g++-6
        - gcc-6
        sources:
        - george-edison55-precise-backports
        - ubuntu-toolchain-r-test
  - env: GCC_VERSION=6 BUILD_TYPE=Release ARCH=64
    os: linux
    addons: *2
  allow_failures:
  - os: osx
branches:
  only:
  - master
  - "/^\\d+\\.\\d+\\.\\d+$/"
before_install:
- |
  if [ -n "$GCC_VERSION" ]; then
    export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}" GCOV="gcov-${GCC_VERSION}";
  fi
- |
  if [ -n "$CLANG_VERSION" ]; then
    export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}";
  fi
install:
- |
  if [[ $TRAVIS_OS_NAME != "osx" ]]; then
    cd ${TRAVIS_BUILD_DIR}
    wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
    tar xf lcov_1.11.orig.tar.gz
    sudo make -C lcov-1.11/ install
    gem install coveralls-lcov
    lcov --version
  fi
before_script:
- mkdir build
- cd build
- |
  if [[ "$GCOV" == "gcov-5" && "$BUILD_TYPE" == "Debug" ]]; then
    cmake -DCMAKE_CXX_COMPILER=${COMPILER} -DARCH=${ARCH} -DGCOV_BINARY=${GCOV} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCOVERAGE=true ..;
    lcov --directory include --directory src --directory test --zerocounters
  else
    cmake -DCMAKE_CXX_COMPILER=${COMPILER} -DARCH=${ARCH} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} ..;
  fi
script:
- |
  make
  make check
after_success:
- |
  if [[ $GCOV == "gcov-5" && "$BUILD_TYPE" == "Debug" ]]; then
    cd ${TRAVIS_BUILD_DIR}
    type $GCOV
    lcov --no-external --base-directory ${TRAVIS_BUILD_DIR} --directory build/src --directory build/test --capture --gcov-tool `which $GCOV` --output-file coverage.info
    lcov --remove coverage.info 'build/test/*' 'build/src/*' --gcov-tool `which $GCOV` --output-file coverage.info
    lcov --list coverage.info
    coveralls-lcov --repo-token=${COVERALLS_TOKEN} coverage.info
  fi
before_deploy:
- cd ${TRAVIS_BUILD_DIR}
- cmake --build build --target archpkg
- cmake --build build --target package
- export RELEASE_TGZ_FILE=$(ls Package/*.tar.gz)
- export RELEASE_DEB_FILE=$(ls Package/*.deb)
- export RELEASE_RPM_FILE=$(ls Package/*.rpm)
- export RELEASE_PKG_FILE=$(ls Package/*.pkg.tar.xz)
- echo "deploying $RELEASE_TGZ_FILE, $RELEASE_DEB_FILE $RELEASE_PKG_FILE and $RELEASE_RPM_FILE
  to GitHub releases"
deploy:
  provider: releases
  api_key:
    secure: re/Z5Ya8IXvuJI4PLD5y6AkuX/yLqEXXxzEwP5pYTJyuIEo5eK4TLMYX7OVP5QGMnuYSv5o3EMXbU30XZpL2z8L+e3lxG0xohRPRjZj8sRHnqwIha+0bbVJc2ufXD3Pml1oAp109SbLHlRiypW06Uv+EEEGtqXayXlGlxziRZA3/Hvz5KmiV5TECrMBg1zHuWT1mRCr5XV9vMjB/HyayW77gxVGL+ox3jZxywwuKf9gMn92f9iQMy8FvaP1Fj7JqBah/Bb4MVPHHGoaq7WDho1inw4/C+YX+gJu/AgMasY/n8l4MjqHp+WBUBN+EBCPfIp4jonkrZGws9E/VqhEHCQQ+MVGj5wQljuD4Ea968aErbX6q/r7toom05/z+16YaTtOJDA5QQkj6YARbtQ8Ulktqj9hEZKs9msHXtGxmwVifn4TMgXuxg9n/2fxoveThrwDYuhSL95jsU+baQiLng2CKVhJAY3wQWiYkua2THZLe5JY3n8kwQB7FiVaNMZ1oBooNG2tsQq0B1a7/cwj3TLc18q7rrkVL8TpDeW15LBV+NUywwZOECmnkfCAAgzU3dRovcdTBlXW0DeSNYy0APykT+He44c5ktFnolO9uSwN7jpCJ2PWESQSg+BmjewrxOx666vivu1COvESn74Ew5PBpnyUrOb2PYf53IrpJCPE=
  file:
    - "${RELEASE_TGZ_FILE}"
    - "${RELEASE_DEB_FILE}"
    - "${RELEASE_RPM_FILE}"
    - "${RELEASE_PKG_FILE}"
  skip_cleanup: true
  on:
    tags: true
    condition: "$GCC_VERSION = 6 && $BUILD_TYPE = Release"
    all_branches: true
    repo: zussel/cmake-cpp-seed
notifications:
  email:
    recipients:
    - sascha.kuehl@gmx.net
